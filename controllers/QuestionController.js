import OpenAI from "openai";

export const responseToUser = async (req, res, next)  => {
    const userInput = "Im good thank you.How ARE you?"; // Capture the userâ€™s response

    const openai = new OpenAI({
        apiKey: process.env.OPEN_AI_API,
    });

    const prompt = 
    [
        {
            "role": "system",
            "content": "You are an assistant that provides sentiment analysis. For each input, respond with a JSON object that includes 'message' and 'sentiment'. The message should be friendly and tailored to the sentiment: if the sentiment is positive, just acknowledge it; if the sentiment is negative, acknowledge it and invite the user to chat further."
        },
        {
            "role": "user",
            "content": `Analyze the sentiment of the following text: ${userInput}. Provide a JSON response with a friendly message and sentiment status. If the sentiment is negative, include an invitation to chat further; if positive, invite user to have chat regarding past memories.`
        }
    ]

    const followupQuestion = await openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: prompt,
        temperature: 0.7,
        max_tokens: 50,
    });
    console.log(followupQuestion);

 
        const result = followupQuestion.choices[0].message.content;
        res.status(200).json(result);

    // Return the response generated by OpenAI to the user via Alexa
   // res.status(200).json(aiResponse);
};



export const getQuestions = (req, res, next) => {

    const questions = [
        "Can you tell me more about your painting hobbies?",
        "What kind of landscapes and portraits did you enjoy creating?",
        "How often did you practice playing the piano?",
        "What inspired you to start painting and playing the piano?",
        "Can you describe a memorable painting or piano piece you worked on?",
        "Did you have any favorite subjects or themes when painting?",
        "How did your daily piano practice influence your skills?",
        "Were there any particular challenges you faced while painting or playing the piano?",
        "What did you enjoy most about painting and playing the piano?",
        "Did you share your artwork or piano performances with others?"
    ];

    try {

        console.log("Hit 1");
        const randomIndex = Math.floor(Math.random() * questions.length);
        let question =  questions[randomIndex];

        res.status(200).json(question);
        
    } catch (error) {
        console.log(error);
    }
}

export const catchAnswers = async (req, res, next) => {

    try {

        const questions = [
            "Can you tell me more about your painting hobbies?",
            "What kind of landscapes and portraits did you enjoy creating?",
            "How often did you practice playing the piano?",
            "What inspired you to start painting and playing the piano?",
            "Can you describe a memorable painting or piano piece you worked on?",
            "Did you have any favorite subjects or themes when painting?",
            "How did your daily piano practice influence your skills?",
            "Were there any particular challenges you faced while painting or playing the piano?",
            "What did you enjoy most about painting and playing the piano?",
            "Did you share your artwork or piano performances with others?"
        ];

        const randomIndex = Math.floor(Math.random() * questions.length);
        let question =  questions[randomIndex];

        const openai = new OpenAI({
            apiKey: process.env.OPEN_AI_API,
        });

        let answers = [];
        answers = req.body;

        console.log(answers?.answers[0]?.answer);
        const prompt = `Given the user's response: '${JSON.stringify(answers?.answers[0]?.answer)}', generate a friendly follow-up question that encourages further engagement and is relevant to the user's answer. 
        The follow-up question should be conversational, open-ended, and should invite the user to share more details or thoughts.
        If the response is vague or indicates no specific topic or requests to change the topic, instead, use the following topic to start the conversation:'${question}'
        The generated prompt should smoothly transition into the selected topic or delve deeper into the user's initial response.`;

        const followupQuestion = await openai.chat.completions.create({
            model: "gpt-3.5-turbo",
            messages: [{ role: "user", content: prompt }],
            temperature: 0.7,
            top_p: 1,
            });
        
            // Send new quis
        const nextQuestion = followupQuestion.choices[0].message.content;
        console.log(nextQuestion);
        res.status(200).json(nextQuestion);
        
    } catch (error) {
        console.log(error);
    }
}